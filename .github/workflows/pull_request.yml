name: CI
on:
  pull_request:
    branches: [development, master]
jobs:
  format:
    name: Format check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Add poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.13
      - name: Retrieve installed dependencies from cache
        id: modules-cache
        uses: actions/cache@v3
        with:
          path: '**/.venv'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.modules-cache.outputs.cache-hit != 'true'
        run: poetry install
      - name: Check format
        run: poetry run poe black-format
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [1.1.13]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: View poetry --help
        run: poetry --help
      - name: Install dependencies
        run: poetry install
      - name: Poetry test
        run: poetry run test --cov
